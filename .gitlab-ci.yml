stages:
  - pages
  - upload_pages_nirelease
  - push
  - build
  - release


pages:

  stage: pages

  image: registry.lanni/pages/doxygen:latest

  script:
    - doxygen
    - mkdir -p public
    - mv docs/html/* public/
    
  when: always

  artifacts:
    paths:
      - public

push_github:
  stage: push
 

  image: registry.lanni/nibuntu/services-20.04:latest

  script:
    - git config --global --add safe.directory '*'
    - git config remote.github_cicd.url >&- || git remote add github_cicd https://NuclearInstruments:${GITHUB_TOKEN}@github.com/NuclearInstruments/SCISDK.git
    - git push -u github_cicd HEAD:master --force

  rules:
    - if: $CI_COMMIT_TAG


docs_nirelease:
  stage: upload_pages_nirelease
  image: registry.lanni/apps/release-manager:latest
  dependencies: 
    - pages
  script:
    - mv public scisdk_docs
    - zip -r scisdk_docs.zip scisdk_docs
    - nirelease -f ni-release-docs.yaml -c -v $CI_COMMIT_TAG -m "Autogenerated by pipeline with tag $CI_COMMIT_TAG"
  rules:
    - if: $CI_COMMIT_TAG
  when: on_success



build_vs2022_windows:
  stage: build
  image: registry.lanni/microsoft/win10-vc-build-tools-2022:latest
  script:
    - ./build.ps1
  tags:
    - docker-windows
  artifacts:
    untracked: false
    name: windows
    paths:
      - output\scisdk-full.zip  
    expire_in: 1 week 
  rules:
    - if: $CI_COMMIT_TAG

windows_nirelease:
  stage: release
  image: registry.lanni/apps/release-manager:latest
  dependencies: 
    - build_vs2022_windows
#    - build_linux_x64  
  script:
    - mv output\scisdk-full.zip  output\scisdk-win-full.zip  
    # - mv linux linux_x64
    # - tar -zcvf linux_x64.tar.gz linux_x64
    - nirelease -f ni-release-windows-full.yaml -c -v $CI_COMMIT_TAG -m "Autogenerated by pipeline with tag $CI_COMMIT_TAG"
    - echo "Generate diff from last release for the latest release"
    - if [ -f CHANGELOG.md ]; then LATEST_TAG=`git tag --sort=-creatordate | head -2 | tail -n 1`; fi
    - if [ -f CHANGELOG.md ]; then git diff $LATEST_TAG ./CHANGELOG.md | tail -n +6 | sed -n "/^+/p" | sed -e "s/^+//" > ./latestChanges.md; fi
    - if [ ! -f CHANGELOG.md ]; then touch latestChanges.md; fi
    - echo "Creating release with the following changelog changes:"
    - cat latestChanges.md    
    - export URLNR=$(nirelease -f ni-release-windows-full.yaml --geturl)
    - release-cli create --description "./latestChanges.md" --tag-name "$CI_COMMIT_TAG" --assets-link "[{\"url\":\"$URLNR\",\"name\":\"scisdk-win-full-$CI_COMMIT_TAG\"}]"
      

  rules:
    - if: $CI_COMMIT_TAG
  when: on_success